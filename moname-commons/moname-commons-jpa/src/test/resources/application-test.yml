# https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html
spring:
  application:
    name: moname-commons-jpa
  datasource:
    driver-class-name: org.hsqldb.jdbc.JDBCDriver
    #
    # https://github.com/brettwooldridge/HikariCP#configuration-knobs-baby
    hikari:
      #
      # ${auto-commit}
      # Default: true
      #auto-commit: true
      #
      # ${connection-init-sql}
      # Will be executed after every new connection creation before adding it to the pool.
      # If this SQL is not valid or throws an exception, it will be treated as a connection failure and the standard retry logic will be followed.
      # Default: none
      connection-init-sql: SELECT COUNT(1) FROM information_schema.system_users;
      #
      # ${connection-test-query}
      # If your driver supports JDBC4 we strongly recommend not setting this property.
      # This is for "legacy" drivers that do not support the JDBC4 ${Connection.isValid()} API.
      # HikariCP will log an error if your driver is not JDBC4 compliant to let you know.
      # Default: none
      connection-test-query: SELECT COUNT(1) FROM information_schema.system_users;
      #
      # ${connection-timeout}
      # Lowest acceptable connection timeout is 250ms.
      # Default: 30_000ms (30 seconds).
      #connection-timeout: 30_000
      #
      # ${idle-timeout}
      # This setting only applies when ${minimum-idle} is defined to be less than ${maximum-pool-size}.
      # The minimum allowed value is 10_000ms (10 seconds).
      # Default: 600_000ms (10 minutes).
      # A value of 0 means that idle connections are never removed from the pool.
      #idle-timeout: 600_000
      #
      # ${maximum-pool-size}
      # When the pool reaches this size, and no idle connections are available, calls to ${getConnection()} will block for up to ${connection-timeout} milliseconds before timing out.
      # Default: 10
      maximum-pool-size: 1
      #
      # ${minimum-idle}
      # For maximum performance and responsiveness to spike demands, we recommend not setting this value and instead allowing HikariCP to act as a fixed size connection pool.
      # Default: same as ${maximum-pool-size}.
      minimum-idle: ${spring.datasource.hikari.maximum-pool-size}
      #
      # ${pool-name}
      # Default: "auto-generated"
      pool-name: moname-commons-jpa-pool
    name: moname-commons-jpa-datasource
    password:
    url: jdbc:hsqldb:mem:moname_commons_jpa
    username: sa
  jpa:
    database: hsql
    database-platform: org.hibernate.dialect.HSQLDialect
    hibernate:
      ddl-auto: none
    show-sql: true
  liquibase:
    change-log: classpath:/db/changelog/db.changelog-main.yml
  sql:
    init:
      encoding: UTF-8
      platform: hsqldb
